{"ast":null,"code":"var _jsxFileName = \"/home/victor/ex_stage/test_pagination/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, Comparator, numberFilter } from 'react-bootstrap-table2-filter';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport ls from 'local-storage';\nconst cmp = {\n  '!=': (val1, val2) => val1 !== val2,\n  '>': (val1, val2) => val1 > val2,\n  '>=': (val1, val2) => val1 >= val2,\n  '=': (val1, val2) => val1 = val2,\n  '<': (val1, val2) => val1 < val2,\n  '<=': (val1, val2) => val1 <= val2\n};\n\nconst nb = str => {\n  for (let i = 1; i < str.length; i++) {\n    if (str[i] === '/') {\n      return str.substr(i + 1, str.length - 1);\n    }\n  }\n};\n\nconst getId = id => {\n  if (id > 80) {\n    id = getId(id - 80);\n  }\n\n  return id;\n};\n\nconst columns_fiche = [{\n  dataField: 'name',\n  text: 'Nom de la biere'\n}, {\n  dataField: 'description',\n  text: 'description'\n}, {\n  dataField: 'brewers_tips',\n  text: 'tips'\n}];\nconst columns = [{\n  dataField: 'name',\n  mode: 'click',\n  text: 'Nom de la biere',\n  filter: textFilter()\n}, {\n  dataField: 'ibu',\n  text: 'Amertume',\n  filter: numberFilter()\n}, {\n  dataField: 'abv',\n  text: \"Alcool\",\n  filter: numberFilter()\n}, {\n  isDummyField: true,\n  dataField: '',\n  formatter: (cell, row) => React.createElement(\"button\", {\n    onClick: () => window.location.replace(\"/biere/\".concat(row.id)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Plus d'info\")\n}];\n\nconst RemoteAll = ({\n  data,\n  page,\n  sizePerPage,\n  onTableChange,\n  totalSize\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, React.createElement(BootstrapTable, {\n  remote: true,\n  keyField: \"id\",\n  data: data,\n  columns: columns,\n  filter: filterFactory(),\n  pagination: paginationFactory({\n    page,\n    sizePerPage,\n    totalSize,\n    hideSizePerPage: true\n  }),\n  onTableChange: onTableChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTableChange = (type, {\n      filters,\n      page\n    }) => {\n      if (type === \"filter\") {\n        let result = this.state.biere;\n        result = result.filter(row => {\n          let valid = true;\n\n          for (const dataField in filters) {\n            const _filters$dataField = filters[dataField],\n                  filterVal = _filters$dataField.filterVal,\n                  filterType = _filters$dataField.filterType,\n                  comparator = _filters$dataField.comparator;\n\n            if (filterType === 'TEXT') {\n              if (comparator === Comparator.LIKE) {\n                if (row[dataField] != null) {\n                  valid = row[dataField].toString().indexOf(filterVal) > -1;\n                }\n              } else {\n                valid = row[dataField] === filterVal;\n              }\n            } else {\n              if (comparator === Comparator.LIKE) {\n                if (row[dataField] != null) {\n                  if (dataField === 'ibu') {\n                    valid = cmp[filters.ibu.filterVal.comparator](row[dataField], filters.ibu.filterVal.number);\n                  } else if (dataField === 'abv') {\n                    valid = cmp[filters.abv.filterVal.comparator](row[dataField], filters.abv.filterVal.number);\n                  }\n                }\n              } else {\n                valid = row[dataField] === filterVal;\n              }\n            }\n\n            if (!valid) break;\n          }\n\n          return valid;\n        });\n        this.setState(() => ({\n          biere: result\n        }));\n      } else {\n        this.getBiere(page);\n      }\n    };\n\n    this.state = {\n      id: 1,\n      singleBiere: [],\n      pag: 1,\n      page: 6,\n      biere: [],\n      sizePerPage: 80,\n      totalSize: 350\n    };\n    this.getBiere = this.getBiere.bind(this);\n    this.handleTableChange = this.handleTableChange.bind(this);\n  }\n\n  getSingleBiere(id) {\n    fetch(\"https://api.punkapi.com/v2/beers/\" + id, {\n      method: 'GET'\n    }).then(Response => Response.json()).then(Response => {\n      this.setState({\n        singleBiere: Response\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.getSingleBiere();\n  }\n\n  getBiere(page) {\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + page + \"&per_page=80\", {\n      method: 'GET'\n    }).then(Response => Response.json()).then(Response => {\n      this.setState({\n        pag: page,\n        biere: Response\n      });\n      ls.set('biere', Response);\n    });\n  }\n\n  componentDidMount() {\n    this.getBiere(this.state.pag);\n  }\n\n  render() {\n    const _this$state = this.state,\n          biere = _this$state.biere,\n          page = _this$state.page,\n          sizePerPage = _this$state.sizePerPage,\n          totalSize = _this$state.totalSize;\n\n    if (window.location.pathname === '/') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark\",\n        onClick: () => window.location.replace('/'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"accueil\"), React.createElement(RemoteAll, {\n        data: biere,\n        page: page,\n        sizePerPage: sizePerPage,\n        totalSize: totalSize,\n        onTableChange: this.handleTableChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }));\n    } else {\n      let nombre = nb(window.location.pathname);\n      let idBiere = parseInt(nombre, 10);\n      this.setState({\n        id: idBiere\n      });\n      let bieres = ls.get('biere');\n      let array = [];\n      console.log(\"--------------\", idBiere);\n      idBiere = getId(idBiere);\n      array.push(bieres[idBiere - 1]);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark\",\n        onClick: () => window.location.replace('/'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Liste des bieres\"), React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: array,\n        columns: columns_fiche,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/victor/ex_stage/test_pagination/src/App.js"],"names":["React","paginationFactory","BootstrapTable","filterFactory","textFilter","Comparator","numberFilter","ls","cmp","val1","val2","nb","str","i","length","substr","getId","id","columns_fiche","dataField","text","columns","mode","filter","isDummyField","formatter","cell","row","window","location","replace","RemoteAll","data","page","sizePerPage","onTableChange","totalSize","hideSizePerPage","App","Component","constructor","props","handleTableChange","type","filters","result","state","biere","valid","filterVal","filterType","comparator","LIKE","toString","indexOf","ibu","number","abv","setState","getBiere","singleBiere","pag","bind","getSingleBiere","fetch","method","then","Response","json","componentWillMount","set","componentDidMount","render","pathname","nombre","idBiere","parseInt","bieres","get","array","console","log","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';  \nimport filterFactory, { textFilter, Comparator, numberFilter } from 'react-bootstrap-table2-filter';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; \nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport ls from 'local-storage';\n\nconst cmp = {\n  '!=': (val1, val2) => val1 !== val2,\n  '>': (val1, val2) => val1 > val2,\n  '>=': (val1, val2) => val1 >= val2,\n  '=': (val1, val2) => val1 = val2,\n  '<': (val1, val2) => val1 < val2,\n  '<=': (val1, val2) => val1 <= val2, \n}\n\nconst nb = (str) => {\n\n  for (let i = 1; i < str.length; i++) {\n    if (str[i] === '/') {\n      return str.substr(i + 1, str.length - 1)\n    }\n  }\n}\n\nconst getId = (id) => {\n  \n  if (id > 80) {\n    id = getId(id - 80)\n  }\n  return (id)\n}\n\nconst columns_fiche = [{\n  dataField: 'name',\n  text: 'Nom de la biere',\n},\n{\n  dataField: 'description',\n  text: 'description'\n},\n{\n  dataField: 'brewers_tips',\n  text: 'tips'\n}]\n\nconst columns = [{\n  dataField: 'name',\n  mode: 'click',\n  text: 'Nom de la biere',\n  filter: textFilter()\n},\n{\n  dataField: 'ibu',\n  text: 'Amertume',\n  filter: numberFilter()\n},\n{\n  dataField: 'abv',\n  text: \"Alcool\",\n  filter: numberFilter()\n},\n{\n  isDummyField: true,\n  dataField: '',\n  formatter: (cell, row) => ( \n    <button onClick={() => window.location.replace(`/biere/${row.id}`)}>Plus d'info</button>\n  )\n}\n];\n\nconst RemoteAll = ({ data, page, sizePerPage, onTableChange, totalSize }) => (\n  <div>\n    <BootstrapTable\n      remote\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n      filter={filterFactory()}\n      pagination={paginationFactory({ page, sizePerPage, totalSize, hideSizePerPage: true, })}\n      onTableChange={onTableChange}\n      />\n  </div>\n);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 1,\n      singleBiere: [],\n      pag: 1,\n      page: 6,\n      biere: [],\n      sizePerPage: 80,\n      totalSize: 350,\n    }\n\n    this.getBiere = this.getBiere.bind(this)\n    this.handleTableChange = this.handleTableChange.bind(this)\n  }\n\n  getSingleBiere(id) {\n    fetch(\"https://api.punkapi.com/v2/beers/\" + id, {\n      method: 'GET'\n    }).then((Response) => Response.json())\n      .then((Response) => {\n        this.setState({\n          singleBiere: Response,\n        })\n      })\n  }\n\n  \n  componentWillMount() {\n    this.getSingleBiere()\n  }\n  \n  getBiere(page) {\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + page + \"&per_page=80\", {\n      method: 'GET'\n    }).then((Response) => Response.json())\n      .then((Response) => {\n        this.setState({\n          pag: page,\n          biere: Response,\n        })\n        ls.set('biere', Response)\n      })\n  }\n\n  componentDidMount() {\n    this.getBiere(this.state.pag)\n  }\n  \n  handleTableChange = (type, { filters, page}) => {\n    if (type === \"filter\") {\n    let result = this.state.biere;\n    result = result.filter((row) => {\n      let valid = true;\n      for (const dataField in filters) {\n        const { filterVal, filterType, comparator } = filters[dataField];\n\n        if (filterType === 'TEXT') {\n          if (comparator === Comparator.LIKE) {\n            if (row[dataField] != null) {\n              valid = row[dataField].toString().indexOf(filterVal) > -1;\n            }\n          } else {\n            valid = row[dataField] === filterVal;\n          }\n        }\n        else {\n          if (comparator === Comparator.LIKE) {\n            if (row[dataField] != null) {\n              if (dataField === 'ibu') {\n                valid = cmp[filters.ibu.filterVal.comparator](row[dataField], filters.ibu.filterVal.number)\n              }\n              else if (dataField === 'abv') {\n                valid = cmp[filters.abv.filterVal.comparator](row[dataField], filters.abv.filterVal.number)\n              }\n            }\n          } else {\n            valid = row[dataField] === filterVal;\n          }\n        }\n        if (!valid) break;\n      }\n      return valid;\n    });\n    this.setState(() => ({\n      biere: result\n    }))\n  }\n  else {\n    this.getBiere(page);\n  }\n  }\n  \n  render() {\n\n    const { biere, page, sizePerPage, totalSize } = this.state;\n\n    if (window.location.pathname === '/') {\n      return (\n        <div>\n          <button type=\"button\" className=\"btn btn-dark\"\n          onClick={() => window.location.replace('/')}\n          >\n            accueil\n          </button>\n          <RemoteAll\n          data={ biere }\n          page={ page }\n          sizePerPage={ sizePerPage }\n          totalSize={ totalSize }\n          onTableChange={this.handleTableChange}\n          />\n        </div>\n      )\n    }\n    else {\n      let nombre = nb(window.location.pathname)\n      let idBiere = parseInt(nombre, 10)\n      this.setState({\n        id: idBiere\n      })\n      let bieres = ls.get('biere')\n      let array = [];\n      console.log(\"--------------\", idBiere)\n      idBiere = getId(idBiere)\n      array.push(bieres[idBiere - 1])\n      return (\n        <div>\n          <button type=\"button\" className=\"btn btn-dark\"\n            onClick={() => window.location.replace('/')}\n          >\n            Liste des bieres\n        </button>\n          <BootstrapTable\n            keyField=\"id\"\n            data={array}\n            columns={columns_fiche}\n          />\n        </div>\n      )\n    }\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}