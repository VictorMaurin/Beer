{"ast":null,"code":"var _jsxFileName = \"/home/victor/ex_stage/test_pagination/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { throwStatement } from '@babel/types';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nconst selectOptions = {\n  0: 25,\n  1: 30,\n  2: 40\n};\nconst columns = [{\n  dataField: 'name',\n  text: 'Nom de la biere',\n  filter: textFilter()\n}, {\n  dataField: 'ibu',\n  text: 'Amertume'\n}, {\n  dataField: 'abv',\n  text: \"Alcool\" // formatter: cell => selectOptions[cell],\n  // filter: selectFilter({\n  //   options: selectOptions,\n  //   defaultValue: 0\n  // })\n\n}];\n\nconst RemoteAll = ({\n  data,\n  page,\n  sizePerPage,\n  onTableChange,\n  totalSize\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(BootstrapTable, {\n  remote: true,\n  keyField: \"id\",\n  data: data,\n  columns: columns,\n  filter: filterFactory(),\n  pagination: paginationFactory({\n    page,\n    sizePerPage,\n    totalSize,\n    hideSizePerPage: true\n  }),\n  onTableChange: onTableChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})); // RemoteAll.propTypes = {\n//   data: PropTypes.array.isRequired,\n//   page: PropTypes.number.isRequired,\n//   totalSize: PropTypes.number.isRequired,\n//   sizePerPage: PropTypes.number.isRequired,\n//   onTableChange: PropTypes.func.isRequired\n// };\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTableChange = (type, {\n      filters,\n      page,\n      sortField\n    }) => {\n      this.getBiere(page);\n    };\n\n    this.state = {\n      page: 6,\n      biere: [],\n      sizePerPage: 80,\n      totalSize: 350\n    };\n    this.getBiere = this.getBiere.bind(this);\n    this.handleTableChange = this.handleTableChange.bind(this);\n  }\n\n  getBiere(page) {\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + page + \"&per_page=80\", {\n      method: 'GET'\n    }).then(Response => Response.json()).then(Response => {\n      this.setState({\n        biere: Response\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getBiere(1);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(RemoteAll, {\n      data: this.state.biere,\n      page: this.state.page,\n      sizePerPage: this.state.sizePerPage,\n      totalSize: this.state.totalSize,\n      onTableChange: this.handleTableChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/victor/ex_stage/test_pagination/src/App.js"],"names":["React","paginationFactory","PaginationProvider","PaginationListStandalone","BootstrapTable","throwStatement","filterFactory","textFilter","Comparator","cellEditFactory","selectOptions","columns","dataField","text","filter","RemoteAll","data","page","sizePerPage","onTableChange","totalSize","hideSizePerPage","App","Component","constructor","props","handleTableChange","type","filters","sortField","getBiere","state","biere","bind","fetch","method","then","Response","json","setState","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';  \nimport { throwStatement } from '@babel/types';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; \nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\n\nconst selectOptions = {\n  0: 25,\n  1: 30,\n  2: 40\n};\n\nconst columns = [{\n  dataField: 'name',\n  text: 'Nom de la biere',\n  filter: textFilter()\n},\n{\n  dataField: 'ibu',\n  text: 'Amertume'\n},\n{\n  dataField: 'abv',\n  text: \"Alcool\",\n  // formatter: cell => selectOptions[cell],\n  // filter: selectFilter({\n  //   options: selectOptions,\n  //   defaultValue: 0\n  // })\n},\n];\n\n\nconst RemoteAll = ({ data, page, sizePerPage, onTableChange, totalSize }) => (\n  <div>\n    <BootstrapTable\n      remote\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n      filter={filterFactory()}\n      pagination={paginationFactory({ page, sizePerPage, totalSize, hideSizePerPage: true, })}\n      onTableChange={onTableChange}\n      />\n  </div>\n);\n\n// RemoteAll.propTypes = {\n//   data: PropTypes.array.isRequired,\n//   page: PropTypes.number.isRequired,\n//   totalSize: PropTypes.number.isRequired,\n//   sizePerPage: PropTypes.number.isRequired,\n//   onTableChange: PropTypes.func.isRequired\n// };\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 6 ,\n      biere: [],\n      sizePerPage: 80,\n      totalSize: 350,\n    }\n\n    this.getBiere = this.getBiere.bind(this)\n    this.handleTableChange = this.handleTableChange.bind(this)\n  }\n\n  getBiere(page) {\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + page + \"&per_page=80\", {\n      method: 'GET'\n    }).then((Response) => Response.json())\n      .then((Response) => {\n        this.setState({\n          biere: Response,\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.getBiere(1)\n  }\n  \n  handleTableChange = (type, { filters, page, sortField }) => {\n    this.getBiere(page);\n  }\n\n  \n  render() {\n\n    return (\n      <div>\n        <RemoteAll\n        data={this.state.biere}\n        page={this.state.page}\n        sizePerPage={this.state.sizePerPage}\n        totalSize={this.state.totalSize}\n        onTableChange={this.handleTableChange}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}