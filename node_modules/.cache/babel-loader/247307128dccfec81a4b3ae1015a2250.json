{"ast":null,"code":"var _jsxFileName = \"/home/victor/ex_stage/test_pagination/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { throwStatement } from '@babel/types';\nimport filterFactory, { selectFilter, textFilter, Comparator, multiSelectFilter, numberFilter } from 'react-bootstrap-table2-filter';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport PropTypes from 'prop-types';\nlet qualityFilter;\nconst selectOptionsAmertume = {\n  0: 50,\n  1: 40,\n  2: \"other\"\n};\nconst selectOptionsAlcool = {\n  0: 4,\n  1: 5,\n  2: 6\n};\nconst columns = [{\n  dataField: 'name',\n  mode: 'click',\n  text: 'Nom de la biere',\n  filter: textFilter()\n}, {\n  dataField: 'ibu',\n  text: 'Amertume',\n  filter: numberFilter()\n}, {\n  dataField: 'abv',\n  text: \"Alcool\",\n  filter: numberFilter()\n}, {\n  isDummyField: true,\n  dataField: '',\n  formatter: () => React.createElement(\"button\", {\n    onClick: () => window.location.replace(\"/biere/\".concat(row.id)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })\n}];\nconst RowEvents = {\n  onClick: (e, row, rowIndex) => {\n    console.log(row.name);\n    return React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"ok\");\n  }\n};\n\nconst RemoteAll = ({\n  data,\n  page,\n  sizePerPage,\n  onTableChange,\n  totalSize\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(BootstrapTable, {\n  remote: true,\n  keyField: \"id\",\n  data: data,\n  columns: columns,\n  filter: filterFactory(),\n  pagination: paginationFactory({\n    page,\n    sizePerPage,\n    totalSize,\n    hideSizePerPage: true\n  }),\n  onTableChange: onTableChange,\n  rowEvents: RowEvents,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTableChange = (type, {\n      filters,\n      page\n    }) => {\n      if (type === \"filter\") {\n        let result = this.state.biere;\n        result = result.filter(row => {\n          let valid = true;\n\n          for (const dataField in filters) {\n            const _filters$dataField = filters[dataField],\n                  filterVal = _filters$dataField.filterVal,\n                  filterType = _filters$dataField.filterType,\n                  comparator = _filters$dataField.comparator;\n\n            if (filterType === 'TEXT') {\n              if (comparator === Comparator.LIKE) {\n                if (row[dataField] != null) {\n                  console.log(row[dataField]);\n                  valid = row[dataField].toString().indexOf(filterVal) > -1;\n                  console.log(valid);\n                }\n              } else {\n                valid = row[dataField] === filterVal;\n              }\n            } else {\n              if (comparator === Comparator.LIKE) {\n                if (row[dataField] != null) {\n                  valid = row[dataField].toString().indexOf(filterVal) > -1;\n                  console.log(valid);\n                }\n              } else {\n                valid = row[dataField] === filterVal;\n              }\n            }\n\n            if (!valid) break;\n          }\n\n          return valid;\n        });\n        this.setState(() => ({\n          biere: result\n        }));\n      } else {\n        this.getBiere(page);\n      }\n    };\n\n    this.state = {\n      page: 6,\n      biere: [],\n      sizePerPage: 80,\n      totalSize: 350\n    };\n    this.getBiere = this.getBiere.bind(this);\n    this.handleTableChange = this.handleTableChange.bind(this);\n  }\n\n  getBiere(page) {\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + page + \"&per_page=80\", {\n      method: 'GET'\n    }).then(Response => Response.json()).then(Response => {\n      this.setState({\n        biere: Response\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getBiere(1);\n  }\n\n  render() {\n    const _this$state = this.state,\n          biere = _this$state.biere,\n          page = _this$state.page,\n          sizePerPage = _this$state.sizePerPage,\n          totalSize = _this$state.totalSize;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(RemoteAll, {\n      data: biere,\n      page: page,\n      sizePerPage: sizePerPage,\n      totalSize: totalSize,\n      onTableChange: this.handleTableChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/victor/ex_stage/test_pagination/src/App.js"],"names":["React","paginationFactory","PaginationProvider","PaginationListStandalone","BootstrapTable","throwStatement","filterFactory","selectFilter","textFilter","Comparator","multiSelectFilter","numberFilter","cellEditFactory","PropTypes","qualityFilter","selectOptionsAmertume","selectOptionsAlcool","columns","dataField","mode","text","filter","isDummyField","formatter","window","location","replace","row","id","RowEvents","onClick","e","rowIndex","console","log","name","RemoteAll","data","page","sizePerPage","onTableChange","totalSize","hideSizePerPage","App","Component","constructor","props","handleTableChange","type","filters","result","state","biere","valid","filterVal","filterType","comparator","LIKE","toString","indexOf","setState","getBiere","bind","fetch","method","then","Response","json","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';  \nimport { throwStatement } from '@babel/types';\nimport filterFactory, { selectFilter, textFilter, Comparator, multiSelectFilter, numberFilter } from 'react-bootstrap-table2-filter';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; \nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport PropTypes from 'prop-types';\n\nlet qualityFilter;\n\nconst selectOptionsAmertume = {\n  0: 50,\n  1: 40,\n  2: \"other\"\n};\n\nconst selectOptionsAlcool = {\n  0: 4,\n  1: 5,\n  2: 6\n}\n\nconst columns = [{\n  dataField: 'name',\n  mode: 'click',\n  text: 'Nom de la biere',\n  filter: textFilter()\n},\n{\n  dataField: 'ibu',\n  text: 'Amertume',\n  filter: numberFilter()\n},\n{\n  dataField: 'abv',\n  text: \"Alcool\",\n  filter: numberFilter()\n},\n{\n  isDummyField: true,\n  dataField: '',\n  formatter: () => (\n    <button onClick={() => window.location.replace(`/biere/${row.id}`)}/>\n  )\n}\n];\n\nconst RowEvents = {\n  onClick: (e, row, rowIndex) => {\n    console.log(row.name)\n    return (\n      <button>\n        ok\n      </button>\n    )\n  }\n};\n\nconst RemoteAll = ({ data, page, sizePerPage, onTableChange, totalSize }) => (\n  <div>\n    <BootstrapTable\n      remote\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n      filter={filterFactory()}\n      pagination={paginationFactory({ page, sizePerPage, totalSize, hideSizePerPage: true, })}\n      onTableChange={onTableChange}\n      rowEvents={ RowEvents }\n      />\n  </div>\n);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 6,\n      biere: [],\n      sizePerPage: 80,\n      totalSize: 350,\n    }\n\n    this.getBiere = this.getBiere.bind(this)\n    this.handleTableChange = this.handleTableChange.bind(this)\n  }\n\n  getBiere(page) {\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + page + \"&per_page=80\", {\n      method: 'GET'\n    }).then((Response) => Response.json())\n      .then((Response) => {\n        this.setState({\n          biere: Response,\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.getBiere(1)\n  }\n  \n  handleTableChange = (type, { filters, page}) => {\n    if (type === \"filter\") {\n    let result = this.state.biere;\n    result = result.filter((row) => {\n      let valid = true;\n      for (const dataField in filters) {\n        const { filterVal, filterType, comparator } = filters[dataField];\n\n        if (filterType === 'TEXT') {\n          if (comparator === Comparator.LIKE) {\n            if (row[dataField] != null) {\n              console.log(row[dataField])\n              valid = row[dataField].toString().indexOf(filterVal) > -1;\n              console.log(valid)\n            }\n          } else {\n            valid = row[dataField] === filterVal;\n          }\n        }\n        else {\n          if (comparator === Comparator.LIKE) {\n            if (row[dataField] != null) {\n              valid = row[dataField].toString().indexOf(filterVal) > -1;\n              console.log(valid)\n            }\n          } else {\n            valid = row[dataField] === filterVal;\n          }\n        }\n        if (!valid) break;\n      }\n      return valid;\n    });\n    this.setState(() => ({\n      biere: result\n    }))\n  }\n  else {\n    this.getBiere(page);\n  }\n  }\n\n  \n  render() {\n\n    const { biere, page, sizePerPage, totalSize } = this.state;\n\n    return (\n      <div>\n        <RemoteAll\n        data={ biere }\n        page={ page }\n        sizePerPage={ sizePerPage }\n        totalSize={ totalSize }\n        onTableChange={this.handleTableChange}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}