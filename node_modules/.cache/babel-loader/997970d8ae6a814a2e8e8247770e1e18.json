{"ast":null,"code":"var _jsxFileName = \"/home/victor/ex_stage/test_pagination/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { throwStatement } from '@babel/types';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nconst columns = [{\n  dataField: 'id',\n  text: 'Product ID'\n}, {\n  dataField: 'name',\n  text: 'Product Name'\n}, {\n  dataField: 'boil_volume.value',\n  text: \"Product volume\",\n  filter: textFilter()\n}];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTableChange = (type, {\n      page,\n      sizePerPage\n    }) => {\n      const currentIndex = (page - 1) * sizePerPage;\n      setTimeout(() => {\n        this.setState(() => ({\n          page,\n          data: products.slice(currentIndex, currentIndex + sizePerPage),\n          sizePerPage\n        }));\n      }, 2000);\n    };\n\n    this.state = {\n      pag: 1,\n      biere: [],\n      sizePerPage: 80\n    };\n    this.getBiere = this.getBiere.bind(this);\n  }\n\n  getBiere() {\n    let array = [];\n    const pag = this.state.pag;\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + pag + \"&per_page=80\", {\n      method: 'GET'\n    }).then(Response => Response.json()).then(Response => {\n      this.setState({\n        biere: Response\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getBiere();\n  }\n\n  render() {\n    const onTableChange = (type, newState) => {};\n\n    return React.createElement(BootstrapTable, {\n      data: this.state.biere,\n      columns: columns,\n      onTableChange: onTableChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/victor/ex_stage/test_pagination/src/App.js"],"names":["React","paginationFactory","BootstrapTable","throwStatement","filterFactory","textFilter","columns","dataField","text","filter","App","Component","constructor","props","handleTableChange","type","page","sizePerPage","currentIndex","setTimeout","setState","data","products","slice","state","pag","biere","getBiere","bind","array","fetch","method","then","Response","json","componentDidMount","render","onTableChange","newState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,aAAP,IAAwBC,UAAxB,QAA0C,+BAA1C;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,SAAS,EAAE,IADI;AAEfC,EAAAA,IAAI,EAAE;AAFS,CAAD,EAGb;AACDD,EAAAA,SAAS,EAAE,MADV;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAHa,EAOhB;AACID,EAAAA,SAAS,EAAE,mBADf;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,MAAM,EAAEJ,UAAU;AAHpB,CAPgB,CAAhB;;AAiBA,MAAMK,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BnBC,iBA5BmB,GA4BC,CAACC,IAAD,EAAO;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP,KAAiC;AACnD,YAAMC,YAAY,GAAG,CAACF,IAAI,GAAG,CAAR,IAAaC,WAAlC;AACAE,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKC,QAAL,CAAc,OAAO;AACnBJ,UAAAA,IADmB;AAEnBK,UAAAA,IAAI,EAAEC,QAAQ,CAACC,KAAT,CAAeL,YAAf,EAA6BA,YAAY,GAAGD,WAA5C,CAFa;AAGnBA,UAAAA;AAHmB,SAAP,CAAd;AAKD,OANS,EAMP,IANO,CAAV;AAOD,KArCkB;;AAEjB,SAAKO,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CADM;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXT,MAAAA,WAAW,EAAE;AAHF,KAAb;AAMA,SAAKU,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,GAAG;AACT,QAAIE,KAAK,GAAG,EAAZ;AACA,UAAMJ,GAAG,GAAG,KAAKD,KAAL,CAAWC,GAAvB;AACAK,IAAAA,KAAK,CAAC,2CAA2CL,GAA3C,GAAiD,cAAlD,EAAkE;AACrEM,MAAAA,MAAM,EAAE;AAD6D,KAAlE,CAAL,CAEGC,IAFH,CAESC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAFtB,EAGGF,IAHH,CAGSC,QAAD,IAAc;AAClB,WAAKb,QAAL,CAAc;AACZM,QAAAA,KAAK,EAAEO;AADK,OAAd;AAGD,KAPH;AAQD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,QAAL;AACD;;AAaDS,EAAAA,MAAM,GAAG;AAEP,UAAMC,aAAa,GAAG,CAACtB,IAAD,EAAOuB,QAAP,KAAoB,CAEzC,CAFD;;AAGA,WACE,oBAAC,cAAD;AACA,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWE,KADjB;AAEA,MAAA,OAAO,EAAEpB,OAFT;AAGA,MAAA,aAAa,EAAE+B,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AApD+B;;AAwDlC,eAAe3B,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';  \nimport { throwStatement } from '@babel/types';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\nconst columns = [{\n  dataField: 'id',\n  text: 'Product ID'\n}, {\n  dataField: 'name',\n  text: 'Product Name'\n}, \n{\n    dataField: 'boil_volume.value',\n  text: \"Product volume\",\n  filter: textFilter()\n}\n\n];\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pag: 1,\n      biere: [],\n      sizePerPage: 80,\n    }\n\n    this.getBiere = this.getBiere.bind(this)\n  }\n\n  getBiere() {\n    let array = [];\n    const pag = this.state.pag\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + pag + \"&per_page=80\", {\n      method: 'GET'\n    }).then((Response) => Response.json())\n      .then((Response) => {\n        this.setState({\n          biere: Response,\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.getBiere()\n  }\n  \n  handleTableChange = (type, { page, sizePerPage }) => {\n    const currentIndex = (page - 1) * sizePerPage;\n    setTimeout(() => {\n      this.setState(() => ({\n        page,\n        data: products.slice(currentIndex, currentIndex + sizePerPage),\n        sizePerPage\n      }));\n    }, 2000);\n  }\n  \n  render() {\n    \n    const onTableChange = (type, newState) => {\n\n    }   \n    return (\n      <BootstrapTable \n      data={this.state.biere} \n      columns={columns} \n      onTableChange={onTableChange} />\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}