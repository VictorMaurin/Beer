{"ast":null,"code":"var _jsxFileName = \"/home/victor/ex_stage/test_pagination/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { throwStatement } from '@babel/types';\nimport filterFactory, { selectFilter, textFilter, Comparator, multiSelectFilter, numberFilter } from 'react-bootstrap-table2-filter';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport PropTypes from 'prop-types';\nlet qualityFilter;\nconst selectOptionsAmertume = {\n  0: 50,\n  1: 40,\n  2: \"other\"\n};\nconst selectOptionsAlcool = {\n  0: 4,\n  1: 5,\n  2: 6\n};\nconst columns = [{\n  dataField: 'name',\n  mode: 'click',\n  text: 'Nom de la biere',\n  filter: textFilter()\n}, {\n  dataField: 'ibu',\n  text: 'Amertume',\n  filter: numberFilter()\n}, {\n  dataField: 'abv',\n  text: \"Alcool\",\n  filter: numberFilter()\n}];\n\nconst RemoteAll = ({\n  data,\n  page,\n  sizePerPage,\n  onTableChange,\n  totalSize\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(BootstrapTable, {\n  remote: true,\n  keyField: \"id\",\n  data: data,\n  columns: columns,\n  filter: filterFactory(),\n  pagination: paginationFactory({\n    page,\n    sizePerPage,\n    totalSize,\n    hideSizePerPage: true\n  }),\n  onTableChange: onTableChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTableChange = (type, {\n      filters,\n      page,\n      sortField\n    }) => {\n      if (type === 'page') {\n        this.getBiere(page);\n      }\n\n      let result = this.state.biere;\n      result = result.filter(row => {\n        let valid = true;\n\n        for (const dataField in filters) {\n          const _filters$dataField = filters[dataField],\n                filterVal = _filters$dataField.filterVal,\n                filterType = _filters$dataField.filterType,\n                comparator = _filters$dataField.comparator;\n\n          if (filterType === 'TEXT') {\n            if (comparator === Comparator.LIKE) {\n              if (row[dataField] != null) {\n                valid = row[dataField].toString().indexOf(filterVal) > -1;\n                console.log(valid);\n              }\n            } else {\n              valid = row[dataField] === filterVal;\n            }\n          }\n\n          if (!valid) break;\n        }\n\n        return valid;\n      });\n      this.setState(() => ({\n        biere: result\n      }));\n    };\n\n    this.state = {\n      page: 6,\n      biere: [],\n      sizePerPage: 80,\n      totalSize: 350\n    };\n    this.getBiere = this.getBiere.bind(this);\n    this.handleTableChange = this.handleTableChange.bind(this);\n  }\n\n  getBiere(page) {\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + page + \"&per_page=80\", {\n      method: 'GET'\n    }).then(Response => Response.json()).then(Response => {\n      this.setState({\n        biere: Response\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getBiere(1);\n  }\n\n  render() {\n    const _this$state = this.state,\n          biere = _this$state.biere,\n          page = _this$state.page,\n          sizePerPage = _this$state.sizePerPage,\n          totalSize = _this$state.totalSize;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(RemoteAll, {\n      data: biere,\n      page: page,\n      sizePerPage: sizePerPage,\n      totalSize: totalSize,\n      onTableChange: this.handleTableChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/victor/ex_stage/test_pagination/src/App.js"],"names":["React","paginationFactory","PaginationProvider","PaginationListStandalone","BootstrapTable","throwStatement","filterFactory","selectFilter","textFilter","Comparator","multiSelectFilter","numberFilter","cellEditFactory","PropTypes","qualityFilter","selectOptionsAmertume","selectOptionsAlcool","columns","dataField","mode","text","filter","RemoteAll","data","page","sizePerPage","onTableChange","totalSize","hideSizePerPage","App","Component","constructor","props","handleTableChange","type","filters","sortField","getBiere","result","state","biere","row","valid","filterVal","filterType","comparator","LIKE","toString","indexOf","console","log","setState","bind","fetch","method","then","Response","json","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';  \nimport { throwStatement } from '@babel/types';\nimport filterFactory, { selectFilter, textFilter, Comparator, multiSelectFilter, numberFilter } from 'react-bootstrap-table2-filter';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; \nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport PropTypes from 'prop-types';\n\nlet qualityFilter;\n\nconst selectOptionsAmertume = {\n  0: 50,\n  1: 40,\n  2: \"other\"\n};\n\nconst selectOptionsAlcool = {\n  0: 4,\n  1: 5,\n  2: 6\n}\n\nconst columns = [{\n  dataField: 'name',\n  mode: 'click',\n  text: 'Nom de la biere',\n  filter: textFilter()\n},\n{\n  dataField: 'ibu',\n  text: 'Amertume',\n  filter: numberFilter()\n},\n{\n  dataField: 'abv',\n  text: \"Alcool\",\n  filter: numberFilter()\n},\n];\n\n\nconst RemoteAll = ({ data, page, sizePerPage, onTableChange, totalSize }) => (\n  <div>\n    <BootstrapTable\n      remote\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n      filter={filterFactory()}\n      pagination={paginationFactory({ page, sizePerPage, totalSize, hideSizePerPage: true, })}\n      onTableChange={onTableChange}\n      />\n  </div>\n);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 6 ,\n      biere: [],\n      sizePerPage: 80,\n      totalSize: 350,\n    }\n\n    this.getBiere = this.getBiere.bind(this)\n    this.handleTableChange = this.handleTableChange.bind(this)\n  }\n\n  getBiere(page) {\n    fetch(\"https://api.punkapi.com/v2/beers?page=\" + page + \"&per_page=80\", {\n      method: 'GET'\n    }).then((Response) => Response.json())\n      .then((Response) => {\n        this.setState({\n          biere: Response,\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.getBiere(1)\n  }\n  \n  handleTableChange = (type, { filters, page, sortField }) => {\n    if (type === 'page') {\n      this.getBiere(page);\n    }\n    let result = this.state.biere;\n    result = result.filter((row) => {\n      let valid = true;\n      for (const dataField in filters) {\n        const { filterVal, filterType, comparator } = filters[dataField];\n\n        if (filterType === 'TEXT') {\n          if (comparator === Comparator.LIKE) {\n            if (row[dataField] != null) {\n              valid = row[dataField].toString().indexOf(filterVal) > -1;\n              console.log(valid)\n            }\n          } else {\n            valid = row[dataField] === filterVal;\n          }\n        }\n        if (!valid) break;\n      }\n      return valid;\n    });\n    this.setState(() => ({\n      biere: result\n    }))\n  }\n\n  \n  render() {\n\n    const { biere, page, sizePerPage, totalSize } = this.state;\n\n    return (\n      <div>\n        <RemoteAll\n        data={ biere }\n        page={ page }\n        sizePerPage={ sizePerPage }\n        totalSize={ totalSize }\n        onTableChange={this.handleTableChange}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}